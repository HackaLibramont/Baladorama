# -*- mode: ruby -*-
# vi: set ft=ruby :
require 'yaml'

project_name = "vagrant-django-stack"

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # default values
  config.vm.box = "ubuntu/trusty64"
  config.vm.box_url = "https://atlas.hashicorp.com/ubuntu/boxes/trusty64"

  config.vm.network :private_network, ip: "192.168.33.15"

  config.vm.provider :virtualbox do |vb|
    vb.customize ["modifyvm", :id, "--name", "Baladorama", "--cpus", "2", "--memory", "2048"]
  end

  #config.vm.synced_folder ".", "/vagrant", type: "rsync", rsync__exclude: [".vagrant/", "Vagrantfile*", "aws_config*"]

  config.vm.define :local do |local|
      # apt cache
      if Vagrant.has_plugin?("vagrant-cachier")
        config.cache.scope = :box
      end

      # Virtualbox settings
      local.vm.provider :virtualbox do |vb, override|
        conf = YAML.load_file('vagrant_config/virtualbox_config.yaml')
        vb.name = project_name
        local.vm.box = conf["box"]
        local.vm.box_url = conf["box_url"]
        local.vm.network "private_network", ip: conf["ip"]
        vb.cpus = conf["cpus"]
        vb.memory = conf["memory"]
      end

      # Ansible provisioner.
      local.vm.provision "ansible" do |ansible|
        #ansible.playbook = "vagrant.yml"
        ansible.playbook = "ansible/local.yml"
        ansible.host_key_checking = false
        ansible.verbose = "v"
      end
  end

  config.vm.define :remote_aws do |remote_aws|
      remote_aws.vm.provider :aws do |aws, override|
        conf = YAML.load_file('vagrant_config/aws_config.yaml')

        if conf["custom_ami"] then
          override.vm.box = "dummy"
          override.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"
        end

        aws.access_key_id = conf["access_key_id"]
        aws.secret_access_key = conf["secret_access_key"]

        aws.region = conf["region"]
        if conf["custom_ami"] then
          aws.ami = conf["custom_ami"]
        end
        aws.instance_type = conf["instance_type"]
        aws.keypair_name = conf["keypair_name"]
        aws.security_groups = conf["security_groups"]
        aws.tags = {
          Name: project_name
        }

        override.ssh.username = "ubuntu"
        override.ssh.private_key_path = conf["ssh_private_key_path"]

        aws.tags = {
          'Name' => project_name,
         }
      end

      # Ansible provisioner.
      remote_aws.vm.provision "ansible" do |ansible|
        ansible.playbook = "ansible/remote.yml"
        ansible.host_key_checking = false
        ansible.verbose = "v"
      end
  end

end
